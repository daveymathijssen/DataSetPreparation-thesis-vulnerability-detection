namespace Extractor.Extensions
{
    public static class StringExtensions
    {
        public static string? FirstCharToLowerCase(this string? str)
        {
            if (!string.IsNullOrEmpty(str) && char.IsUpper(str[0]))
            {
                return str.Length == 1 ? char.ToLower(str[0]).ToString() : char.ToLower(str[0]) + str[1..];
            }

            return str;
        }

        /// <summary>
        /// Replace invalid type characters such as <, >, [, ], and ? in a string.
        /// </summary>
        /// <param name="str"></param>
        /// <returns></returns>
        public static string ReplaceInvalidTypeCharacters(this string str)
        {
            return str.Replace("<", "_").Replace(">", string.Empty).Replace("[", "Array").Replace("]", string.Empty).Replace(".", string.Empty).Replace("?", "unknown");
        }
    }
}
