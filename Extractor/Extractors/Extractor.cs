using Extractor.Entities;
using Microsoft.CodeAnalysis;

namespace Extractor.Extractors
{
    public abstract class Extractor
    {
        /// <summary>
        /// Extract cases from a data set and save them in a folder.
        /// </summary>
        public abstract void ExtractCases();

        protected abstract SyntaxNode GetLabeledSyntaxNode(string filePath, bool isVulnerable);

        protected static void SaveSample(SyntaxNode node, string cwe, string outputLocation, string sourceFilePath) =>
            File.WriteAllText(Path.Combine(outputLocation, cwe, Path.GetFileName(sourceFilePath)), node.ToFullString());

        protected static void SaveStatistics(string outputLocation, string outputFileName, IEnumerable<DataSetStatistics> statistics) =>
            File.WriteAllText(Path.Combine(outputLocation, outputFileName), string.Join("\n", statistics));

        /// <remarks>Any underscores in the CWE name will be removed.</remarks>
        protected static void CreateOutputCweDirectories(string[] cwes, string outputLocation)
        {
            foreach (var cwe in cwes)
            {
                var cweDirectory = Path.GetFullPath(Path.Join(outputLocation, cwe.Replace("_", string.Empty).ToUpper()));
                Directory.CreateDirectory(cweDirectory);
            }
        }
    }
}
