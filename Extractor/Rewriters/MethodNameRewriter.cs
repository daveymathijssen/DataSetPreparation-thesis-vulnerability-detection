using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;

namespace Extractor.Rewriters
{
    public class MethodNameRewriter : CSharpSyntaxRewriter
    {
        private readonly bool isVulnerableSample;

        public MethodNameRewriter(bool isVulnerableSample)
        {
            this.isVulnerableSample = isVulnerableSample;
        }

        public override SyntaxNode? VisitMethodDeclaration(MethodDeclarationSyntax node)
        {
            var newName = "Good";
            if (isVulnerableSample)
            {
                newName = "Bad";
            }

            return node.WithIdentifier(Identifier(newName).WithTriviaFrom(node.Identifier));
        }
    }
}
